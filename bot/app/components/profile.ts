import { InlineKeyboardMarkup } from "node-telegram-bot-api";
import { getProfile } from "./db";

async function push_profile(
  bot: any,
  username: string,
  chatId: number,
  messageId: number
) {
  const info = await getProfile(chatId);
  if (info) {
    await bot.editMessageCaption(
      `üìà <b>–í–æ—Ç —Ç–≤–æ—è —Å—Ç–∞—Ç–∞ ${username}:</b>\n\n` +
        `‚óè <b>–§–ò–û:</b> <i>${
          info.fio.length === 0 ? ` üö´ <i><b>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ!</b></i>` : info.fio
        }</i>\n` +
        `‚óè <b>–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤ —Å–¥–µ–ª–∞–Ω–æ:</b> <i>${info.orders_count}</i>\n` +
        `‚óè <b>–ë–æ–Ω—É—Å—ã:</b> <i>${info.bonus_count}</i>\n` +
        `‚óè <b>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:</b> <i>${
          info.locale.length === 0
            ? ` üö´ <i><b>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ!</b></i>`
            : info.locale
        }</i>\n` +
        `‚óè <b>Email:</b> <i>${
          info.email.length === 0
            ? ` üö´ <i><b>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ!</b></i>`
            : info.email
        }</i>\n\n` +
        `<i><b>P.S</b> Email, –ê–¥—Ä–µ—Å –ü–í–ó –∏ –§–ò–û –Ω—É–∂–Ω—ã –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞</i>\n\n` +
        `<i>–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ú–æ—Å–∫–≤–µ –≤–æ–∑–º–æ–∂–Ω–∞ –Ω–∞—à–∏–º –∫—É—Ä—å—Ä–æ–º. –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ú–ö–ê–î —Å–æ—Å—Ç–∞–≤–∏—Ç 500 —Ä—É–±–ª–µ–π, –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –ú–ö–ê–î 800 —Ä—É–±–ª–µ–π.</i>\n` +
        `<i>–¢–∞–∫–∂–µ –≤–æ–∑–º–æ–∂–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ –ü–í–ó –ë–æ–∫—Å–±–µ—Ä—Ä–∏.</i>`,
      {
        chat_id: chatId,
        message_id: messageId,
        parse_mode: "HTML",
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "‚è≥ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤",
                callback_data: "data_orders",
              },
              {
                text: "üì¶ –û–±–Ω–æ–≤–∏—Ç—å –∞–¥—Ä–µ—Å",
                callback_data: "locale",
              },
            ],
            [
              {
                text: info.email.length === 0 ? "‚úâÔ∏è –ó–∞–ø–æ–ª–Ω–∏—Ç—å email" : "",
                callback_data: "email",
              },
            ],
            [
              {
                text: info.fio.length === 0 ? "üë§ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –§–ò–û" : "",
                callback_data: "fio",
              },
            ],

            [
              {
                text: "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                callback_data: "main_menu",
              },
            ],
          ],
        } as InlineKeyboardMarkup,
      }
    );
  } else {
    console.log("User profile not found.");
  }
}

export { push_profile };
